#!/bin/bash 

# iterate through all options
#for file in $*
#set -o pipefail  # trace ERR through pipes
#set -o errtrace  # trace ERR through 'time command' and other functions
#set -o nounset   ## set -u : exit the script if you try to use an uninitialised variable
#set -o errexit   ## set -e : exit the script if any statement returns a non-true return value
rm -f error
stderr_log="error"
exec 2>"$stderr_log"

#for file in $(ls src/)
for file1 in `cat scr/regress-vlg.list.ssy`
do
	file="${file1}.v"
	if [[ ${file1} == *br988* ]]    ||
	   [[ ${file1} == *br_gh25a* ]] || # sv function declaration outside of module
	   [[ ${file1} == *br_gh25* ]]  || # sv task declaration outside of module
	   [[ ${file1} == *br_gh60a* ]] ||  # sv x'by with 0 ==0 , which lead to first get 0 then get 'by
	   [[ ${file1} == *br_gh79* ]] ; then # sv with _ following 'b
		echo "ignoring " ${file1}
	else
		echo ${file}
		# step1
		#step1_noinc_comment ./src/${file} > ${file}.noinc.v || exit 1
		step1_noinc_comment ./src/${file} > ${file}.noinc.v 
	
		# step2
		#step2_nodef ${file}.noinc.v > ${file}.nodef.v || exit 1
		step2_nodef ${file}.noinc.v > ${file}.nodef.v 
	
		# step3
		#checker ${file}.nodef.v > ${file}.sdf.v || exit 1
		checker ${file}.nodef.v > ${file}.sdf.v 
	
		# tokenize the step2 result
		#../scr/vtran.scr nodef.v || exit 1
	
		# tokenize the step3 result
		#../scr/vtran.scr ${file}.sdf.v || exit 1
		../scr/vtran.scr ${file}.sdf.v 
	
		# ivlpp 
		#ivlpp -L ./src/${file} > ${file}.ivlpp.v || exit 1
		ivlpp -L ./src/${file} > ${file}.ivlpp.v 
	
		# removing ivlpp result's comment
		#step1_noinc_comment ${file}.ivlpp.v > ${file}.ivlpp.v.noinc || exit 1
		step1_noinc_comment ${file}.ivlpp.v > ${file}.ivlpp.v.noinc
	
		# tokenize the ivlpp result
		#../scr/vtran.scr ${file}.ivlpp.v.noinc  || exit 1
		../scr/vtran.scr ${file}.ivlpp.v.noinc 
	
		# diff sdf.v.tok nodef.v.tok > diff_parse_${file}
		diff ${file}.sdf.v.tok ${file}.ivlpp.v.noinc.tok > diff_2ivl_${file}
		fi
done
