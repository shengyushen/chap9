#!/bin/bash 

# iterate through all options
#for file in $*
#set -o pipefail  # trace ERR through pipes
#set -o errtrace  # trace ERR through 'time command' and other functions
#set -o nounset   ## set -u : exit the script if you try to use an uninitialised variable
#set -o errexit   ## set -e : exit the script if any statement returns a non-true return value
rm -f error
stderr_log="error"
exec 2>"$stderr_log"

#for file in $(ls src/)
for file1 in `cat scr/regress-vlg.list.ssy`
do
	file="${file1}.v"
	if [[ ${file1} == *br988* ]]    ||
	   [[ ${file1} == *br_gh25a* ]] || # sv function declaration outside of module
	   [[ ${file1} == *br_gh25* ]]  || # sv task declaration outside of module
	   [[ ${file1} == *br_gh60a* ]] ||  # sv x'by with 0 ==0 , which lead to first get 0 then get 'by
	   [[ ${file1} == elsif_test ]] ||  # improper ifdef
	   [[ ${file1} == pr1716276 ]] ||  # parameter empty
	   [[ ${file1} == pr1763333 ]] ||  # port empty 
	   [[ ${file1} == pr1861212a ]] ||  # reg real not supported in verilog
	   [[ ${file1} == pr2051975 ]] ||  # mixed ordered and named port list
	   [[ ${file1} == pr2123190 ]] ||  # wire real not supported in verilog 2005
	   [[ ${file1} == pr2395378a ]] ||  # buf must have at least two ports
	   [[ ${file1} == pr2395378b ]] ||  # buf must have at least two ports
	   [[ ${file1} == pr2395378c  ]] ||  # not must have at least two ports
	   [[ ${file1} == pr2794144  ]] ||  # space between reduce operator such as ~& changed to ~ &
	   [[ ${file1} == pr3015421  ]] ||  # sv function type of int 
	   [[ ${file1} == pr3112073a  ]] ||  # sv reg real 
	   [[ ${file1} == real_invalid_ops  ]] ||  # using reduced operator as binary operator
	   [[ ${file1} == function4 ]] ||  # function with zero parameter
	   [[ ${file1} == *br_gh79* ]] ; then # sv with _ following 'b
		echo "ignoring " ${file1}
	else
		echo ${file}
		chap9.sh ${file}
	
		# tokenize the step3 result
		tok.sh ${file}.step3.v
	
		# ivlpp 
		ivlpp -L  ${file} > ${file}.ivlpp.v 
	
		# removing ivlpp result's comment
		step1_noinc_comment ${file}.ivlpp.v > ${file}.ivlpp.v.noinc
	
		# tokenize the ivlpp result
		tok.sh ${file}.ivlpp.v.noinc 
	
		diff ${file}.step3.v.tok ${file}.ivlpp.v.noinc.tok > diff_ivlpp_${file}
	fi
done
